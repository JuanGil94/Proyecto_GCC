<?php

/**
 * 	Dear developer!
 *	Never modify events.php file, it is autogenerated.
 *  Modify PHP/EventTemplates/events.txt instead.
 *
 */

 class eventclass_cumplimiento_de_metas_de_recaudo  extends eventsBase
{
	function __construct()
	{
	// fill list of events
		$this->events["BeforeProcessList"]=true;


	}

//	handlers

				// List page: Before process
function BeforeProcessList($pageObject)
{

				 $U_user = $_SESSION["UserNameF"];
		 $cumplimiento_hasta =  $_SESSION['cumplimiento_mes'];// Fecha en formato YYYY-MM-DD

		 // Separar la fecha en año, mes y día
		//list($ano, $mes, $dia) = explode('-', $cons_mes);


				// Crear un objeto DateTime a partir del año y mes
		$dateHasta = new DateTime($cumplimiento_hasta);

		// Generar el último día del mes
		$ultimo_dia = $dateHasta->modify('last day of this month')->format('d-m-Y');

		// Definir un array con los nombres de las carteras
		$cartera = [
			 '1' => 'CARTERA CORRIENTE',
			 '2' => 'CARTERA PRESCRITA CSJ',
			 '3' => 'CARTERA PRESCRITA MINJUSTICIA',
			 '4' => 'CARTERA MINJUSTICIA',
			 '5' => 'CARTERA EJEMPLARIZANTE'
		];

		// Convertir el id cartera numérico al nombre correspondiente
		$cartera_nombre = $cartera[$ejecutivo_cartera ];


		  global $xt;


  		$sql = "	 DECLARE	@Hasta DATE = '$cumplimiento_hasta';
     SET @Hasta = EOMONTH(@Hasta);
     DECLARE @Ano INT= YEAR(@Hasta);
     WITH a
          AS (SELECT Procesos.SeccionalId, SUM(Pagos1.PagoObli + Pagos1.PagoCost + Pagos1.PagoInte + Pagos1.PagoMayo + Pagos1.PagoTerm) AS Recaudo, COUNT(DISTINCT Pagos1.ProcesoId) AS TotaProc
						FROM     Pagos1 INNER JOIN
												Procesos ON Pagos1.ProcesoId = Procesos.ProcesoId
						WHERE  (YEAR(Pagos1.Registro) = @Ano) AND (CONVERT(date, Pagos1.Registro) <= @Hasta)
						GROUP BY Procesos.SeccionalId)
									 SELECT Seccionales.Seccional, 
											  Presupuestos.Meta, 
											  Presupuestos.Procesos, 
											  ISNULL(a.Recaudo,0) Recaudo, 
											  ISNULL(a.TotaProc,0) TotaProc, 
											  case when Presupuestos.Meta <> 0 then convert(float,ISNULL(a.Recaudo,0)) / convert(float,Presupuestos.Meta)  else 0 end Cumplimiento,
											  case when Presupuestos.Procesos <> 0 then convert(float,ISNULL(a.TotaProc,0)) / convert(float,Presupuestos.Procesos) else 0 end CumpProc
									 FROM Presupuestos
											LEFT OUTER JOIN a ON a.SeccionalId = Presupuestos.SeccionalId
											INNER JOIN Seccionales ON Presupuestos.SeccionalId = Seccionales.SeccionalId
									 WHERE Ano = @Ano
								  order by 1;
						";
		    // Define tu consulta SQL

    // Ejecuta la consulta
    $resultado = CustomQuery($sql);

		// Genera el inicio de la tabla HTML
		$htmlTable = '<div id="miContenedor" style="display: flex; margin-bottom: 20px;">';

		// Agrega el texto
		//$htmlTable .= '<div style="flex: 1; text-align: center; font-weight: bold; font-size: 16px;">';
		$htmlTable .= '<div style="flex: 1;">';
				// Agrega la imagen
		//$htmlTable .= '<img src="images/LogoCSJ.png" alt="Logo" style="width: 215px; height: 70px;">';
		$htmlTable .= '<img src="images/LogoCSJ.png" alt="Logo" style="width: 215px; height: 70px; float: left; margin-right: 20px;">';
		$htmlTable .= '<p style="display: block; text-align: center; font-weight: bold; font-size: 16px; margin-left: 235px;">';
		$htmlTable .= 'Dirección Ejecutiva de Administración Judicial<br>';
		$htmlTable .= 'Cumplimiento Metas de Recaudo<br>';
	  $htmlTable .= 'Consolidado por Dirección Seccional<br>';
		$htmlTable .= 'A '.$ultimo_dia.'<br>';
		$htmlTable .= '</p>';




		// Agrega el título de la tabla
		$htmlTable .= '<table border="1" cellpadding="9" cellspacing="0" style="width: 100%; border-collapse: collapse; font-family: Arial, sans-serif;">';

		// Estilo de encabezado
		$htmlTable .= '<thead style="background-color: #d9d9d9; font-weight: bold; text-align: center;">';
		$htmlTable .= '<tr>';
		$htmlTable .= '<th style="text-align: center; width: 20%;">DIRECCION SECCIONAL</th>';
		$htmlTable .= '<th style="text-align: center; width: 20%;">META</th>';
		$htmlTable .= '<th style="text-align: center; width: 20%;">RECAUDO</th>';
		$htmlTable .= '<th style="text-align: center; width: 20%;">% DE CUMPLIMIENTO</th>';
		$htmlTable .= '<th style="text-align: center; width: 20%;">META # PROCESOS</th>';
		$htmlTable .= '<th style="text-align: center; width: 20%;">CANT. PROCESOS</th>';
		$htmlTable .= '<th style="text-align: center; width: 20%;">% DE PROCESOS</th>';
		$htmlTable .= '</tr>';
		$htmlTable .= '</thead>';

		// Genera el cuerpo de la tabla
		$htmlTable .= '<tbody>';



		// Procesa los resultados y agrega las filas
		while ($data = db_fetch_array($resultado)) {



			 $htmlTable .= '<tr>';
			 $htmlTable .= '<td style="text-align: center;">' . htmlspecialchars($data['Seccional']) . '</td>';
			 $htmlTable .= '<td style="text-align: right;">' . htmlspecialchars(number_format($data['Meta'], 0, ',', '.')) . '</td>';
			 $htmlTable .= '<td style="text-align: right;">' . htmlspecialchars(number_format($data['Recaudo'], 0, ',', '.')) . '</td>';
			 $htmlTable .= '<td style="text-align: right;">' . htmlspecialchars(number_format(round($data['Cumplimiento']* 100, 2), 2, ',', '.')) .'%'.'</td>';
			 $htmlTable .= '<td style="text-align: right;">' . htmlspecialchars(number_format($data['Procesos'], 0, ',', '.')) . '</td>';
			 $htmlTable .= '<td style="text-align: right;">' . htmlspecialchars(number_format($data['TotaProc'])) . '</td>';
			 $htmlTable .= '<td style="text-align: right;">' . htmlspecialchars(number_format(round($data['CumpProc']* 100, 2), 2, ',', '.')) .'%'.'</td>';
			 $htmlTable .= '</tr>';
				
				$TotalMeta += $data['Meta'];
				$Totalproceso += $data['Procesos'];
				$TotalRecaudo += $data['Recaudo'];
				$TotalProc += $data['TotaProc'];
				$Totalcumplimiento += $data['Cumplimiento'];
				//$TotalValoAnal += $data['ValoAnal'];
				$TotalcumpPro += $data['CumpProc'];
				//$TotalValoPresMes += $data['ValoPresMes'];

				
		}
		
		$htmlTable .= '<tr>';
		$htmlTable .= '<th style="text-align: center; width: 20%; bold;">TOTAL</th>';
		$htmlTable .= '<th style="text-align: right; width: 20%; bold;">' . htmlspecialchars(number_format($TotalMeta, 0, ',', '.')) . '</th>';
		$htmlTable .= '<th style="text-align: right; width: 20%; bold;">' . htmlspecialchars(number_format($TotalRecaudo, 0, ',', '.')) . '</th>';
		$htmlTable .= '<th style="text-align: right; width: 20%; font-weight: bold;">' . htmlspecialchars(number_format(($TotalRecaudo / $TotalMeta) * 100, 2, ',', '.')) . '%</th>';
		$htmlTable .= '<th style="text-align: right; width: 20%; bold;">' . htmlspecialchars(number_format($Totalproceso, 0, ',', '.')) . '</th>';
		$htmlTable .= '<th style="text-align: right; width: 20%; bold;">' . htmlspecialchars(number_format($TotalProc, 0, ',', '.')) . '</th>';
		$htmlTable .= '<th style="text-align: right; width: 20%; font-weight: bold;">' . htmlspecialchars(number_format(($TotalProc / $Totalproceso) * 100, 2, ',', '.')) .'%</th>';
		$htmlTable .= '</tr>';

		$htmlTable .= '</tbody>';
		$htmlTable .= '</table>';
		$htmlTable .= '</div>';
		$htmlTable .= '</div>'; // Cierra el div flex


		// Asigna el HTML generado a una variable para usarla en la plantilla
		$xt->assign("mi_tabla_html", $htmlTable);

		return true; // Devuelve true para continuar con el proceso

;
} // function BeforeProcessList

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		



}
?>