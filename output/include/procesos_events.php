<?php

/**
 * 	Dear developer!
 *	Never modify events.php file, it is autogenerated.
 *  Modify PHP/EventTemplates/events.txt instead.
 *
 */

 class eventclass_procesos  extends eventsBase
{
	function __construct()
	{
	// fill list of events
		$this->events["BeforeMoveNextList"]=true;

		$this->events["BeforeQueryList"]=true;

		$this->events["BeforeProcessList"]=true;



	}

//	handlers

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
				// List page: After record processed
function BeforeMoveNextList(&$data, &$row, &$record, $recordId, $pageObject)
{

		
$record['ObligacionInicial_css'].='background:#ffffe0';
$record['CostasInicial_css'].='background:#ffffe0';
$record['InteresesInicial_css'].='background:#ffffe0';

$record['Obligacion_css'].='background:#e0f7fa';
$record['Costas_css'].='background:#e0f7fa';
$record['Intereses_css'].='background:#e0f7fa';
//$data['SaldoFinal']
$record['SaldoFinal_css'].='background:#ffe0e0';


//$record["hovercss"]='background:yellow;';
//addNotification( "It's time to check your mail", "Mail check", "glyphicon-envelope", "https://mail.google.com", null, null, true );
/*
$_SESSION["AbogadoId"];
$abogadoId=intval($_SESSION["AbogadoId"]);
$consulta=DB::Query("SELECT * from Procesos where AbogadoId=".$abogadoId)." and ";
while( $date = $consulta->fetchAssoc() )
{
	$userId=$date["UserId"];
	$_SESSION["AbogadoId"]=$date["AbogadoId"];
}
*/
/*
echo "<script>Runner.displayPopup( {
     html: '<form action='classes/upload.php' method='POST' enctype='multipart/form-data'><label for='numero'>No. Proceso: &nbsp; </label><input id='numero' name='numero' type='text' value='' readonly>&nbsp;&nbsp;&nbsp;<label for='procesoId'>ProcesoId:&nbsp</label><input id='procesoId' name='procesoId' type='text' value='5' readonly><br><br><br><input type='file' name='archivo[]' id='archivo' accept='.pdf' multiple /><input type='submit' value='Subir'></input></form><br/><button id='openModalBtn'>Ver Archivos</button><br><div id='lista-archivos'></div>',
     header: 'Subir Archivos',
	  width: 800,
	  height: 500
});</script>"
*/
// Place event code here.
// Use "Add Action" button to add code snippets.
;
} // function BeforeMoveNextList

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
				// List page: Before SQL query
function BeforeQueryList(&$strSQL, &$strWhereClause, &$strOrderBy, $pageObject)
{

		$strWhereClause = whereAdd($strWhereClause, "SeccionalId in (".$_SESSION["Seccionales"].")");


// Place event code here.
// Use "Add Action" button to add code snippets.
;
} // function BeforeQueryList

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

				// List page: Before process
function BeforeProcessList($pageObject)
{

		/*
DB::Exec("UPDATE Procesos SET Dias=ISNULL(dbo.InterrupcionesSumaView.Dias, 0) + dbo.Suspensiones_GetBy_Periodo(CASE WHEN Procesos.Incumplimiento IS NULL OR
                         Procesos.Incumplimiento < Procesos.Acuerdo OR
                         Procesos.Incumplimiento < Procesos.Notificacion THEN CASE WHEN Procesos.Acuerdo IS NULL OR
                         Procesos.Acuerdo < Procesos.Notificacion THEN CASE WHEN Procesos.Notificacion IS NULL THEN Procesos.Ejecutoria ELSE Procesos.Notificacion END ELSE Procesos.Acuerdo END ELSE Procesos.Incumplimiento END, 
                         GETDATE(), Procesos.SeccionalId) + DATEDIFF(day, GETDATE(), DATEADD(year, CASE WHEN Procesos.ConceptoId = 5 THEN 3 ELSE 5 END, CASE WHEN Procesos.Incumplimiento IS NULL OR
                         Procesos.Incumplimiento < Procesos.Acuerdo OR
                         Procesos.Incumplimiento < Procesos.Notificacion THEN CASE WHEN Procesos.Acuerdo IS NULL OR
                         Procesos.Acuerdo < Procesos.Notificacion THEN CASE WHEN Procesos.Notificacion IS NULL THEN Procesos.Ejecutoria ELSE Procesos.Notificacion END ELSE Procesos.Acuerdo END ELSE Procesos.Incumplimiento END))
						 FROM Procesos
						 LEFT JOIN dbo.InterrupcionesSumaView ON dbo.Procesos.ProcesoId = dbo.InterrupcionesSumaView.ProcesoId");
*/
;
} // function BeforeProcessList

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		



}
?>