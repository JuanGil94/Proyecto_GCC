<?php

/**
 * 	Dear developer!
 *	Never modify events.php file, it is autogenerated.
 *  Modify PHP/EventTemplates/events.txt instead.
 *
 */

 class eventclass_sancionados  extends eventsBase
{
	function __construct()
	{
	// fill list of events

		$this->events["BeforeAdd"]=true;

		$this->events["AfterAdd"]=true;

		$this->events["BeforeEdit"]=true;

		$this->events["AfterEdit"]=true;


		$this->events["BeforeDelete"]=true;


	}

//	handlers

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
				// Before record added
function BeforeAdd(&$values, &$message, $inline, $pageObject)
{

				$_SESSION["CarcelId"]=$values["Carcel"];
		unset($values["Carcel"]);

$busquedaSanc = $values["Documento"]; 

$sql2 = "SELECT Documento, Sancionado, Masculino, Email FROM Sancionados WHERE Documento = '$busquedaSanc'";

// Ejecutar la consulta
$result2 = DB::Query($sql2);

// Obtener el resultado
$row2 = $result2->fetchAssoc();

// Variables a usar
$id2 = $row2['Documento']; // Verifica que exista 'Documento'
$Sancionado = $row2['Sancionado'];

 

if (!empty($id2)) {
    // Si el sancionado existe
		$message = "Existe el sancionado '$Sancionado' con Documento '$id2' dentro del sistema.";
        
    // Detener el proceso
   
} else {
    // Continuar si no existe
    return true;
}


;
} // function BeforeAdd

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
				// After record added
function AfterAdd(&$values, &$keys, $inline, $pageObject)
{

		//print_r($values);
if (!empty($_SESSION["CarcelId"])){
	$rs1 = DB::Query("SELECT * FROM Carceles WHERE CarcelId=".$_SESSION["CarcelId"]);
		while( $data = $rs1->fetchAssoc() )
		{
			$carcel=$data['Carcel'];
			$ciudad=$data['CiudadId'];
			$direccion=$data['Direccion'];
			$telefonos=$data['Telefono'];
		}
	//$rs2=DB::Exec("INSERT INTO Direcciones (SancionadoId,CarcelId,CiudadId,Direccion,Barrio,Telefonos,Activa) VALUES (".$values['SancionadoId'].",".$carcelId.",".$ciudad.",'".$direccion."',NULL,'".$telefonos."',1)");
	$rs2=DB::Exec("INSERT INTO Direcciones (SancionadoId,CarcelId,CiudadId,Direccion,Barrio,Telefonos,Activa) VALUES (".$values['SancionadoId'].",".$_SESSION["CarcelId"].",".$ciudad.",'".$direccion."',NULL,'".$telefonos."',1)");		
if ($rs2) {
			 //echo "La consulta se realizó correctamente.";
		} 
		else {
			 // Hubo un error en la ejecución de la consulta
			 echo "Error al ejecutar la consulta 1: " . DB::LastError();
			 exit();
		}
}

// Place event code here.
// Use "Add Action" button to add code snippets.

// Place event code here.
// Use "Add Action" button to add code snippets.
;
} // function AfterAdd

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
				// Before record updated
function BeforeEdit(&$values, $where, &$oldvalues, &$keys, &$message, $inline, $pageObject)
{

		$_SESSION["CarcelId"]=$values["Carcel"];
unset($values["Carcel"]);

// Place event code here.
// Use "Add Action" button to add code snippets.

return true;
;
} // function BeforeEdit

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
				// After record updated
function AfterEdit(&$values, $where, &$oldvalues, &$keys, $inline, $pageObject)
{

		//print_r($values);
if (!empty($_SESSION["CarcelId"])){
	$rs1 = DB::Query("SELECT * FROM Carceles WHERE CarcelId=".$_SESSION["CarcelId"]);
		while( $data = $rs1->fetchAssoc() )
		{
			$carcel=$data['Carcel'];
			$ciudad=$data['CiudadId'];
			$direccion=$data['Direccion'];
			$telefonos=$data['Telefono'];
		}
	//$rs2=DB::Exec("INSERT INTO Direcciones (SancionadoId,CarcelId,CiudadId,Direccion,Barrio,Telefonos,Activa) VALUES (".$values['SancionadoId'].",".$carcelId.",".$ciudad.",'".$direccion."',NULL,'".$telefonos."',1)");
	$rs2=DB::Exec("INSERT INTO Direcciones (SancionadoId,CarcelId,CiudadId,Direccion,Barrio,Telefonos,Activa) VALUES (".$values['SancionadoId'].",".$_SESSION["CarcelId"].",".$ciudad.",'".$direccion."',NULL,'".$telefonos."',1)");		
if ($rs2) {
			 //echo "La consulta se realizó correctamente.";
		} 
		else {
			 // Hubo un error en la ejecución de la consulta
			 echo "Error al ejecutar la consulta 1: " . DB::LastError();
			 exit();
		}
}

// Place event code here.
// Use "Add Action" button to add code snippets.

// Place event code here.
// Use "Add Action" button to add code snippets.

// Place event code here.
// Use "Add Action" button to add code snippets.
;
} // function AfterEdit

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
				// Before record deleted
function BeforeDelete($where, &$deleted_values, &$message, $pageObject)
{

		
$deleted_values["SancionadoId"];

$IdSancionado = $deleted_values["SancionadoId"];

//print_r($IdSancionado);

  $sql = "select SancionadoId, Numero from Procesos where SancionadoId = '$IdSancionado'";

	// Ejecutar la consulta
	$result = DB::Query($sql);

	// Obtener el resultado
	$row = $result->fetchAssoc();
	$id = $row['SancionadoId'];
	$numero = $row['Numero'];


// Verificar si existen procesos asociados
if (!empty($id)) {
    // Si tiene procesos asociados, mostrar la alerta SweetAlert en el frontend
    //$pageObject->setProxyValue("updated", true);

    // Pasar los datos necesarios al frontend para mostrar la alerta
    echo "<script>
        var sancionadoId = '$id';
        var numero = '$numero';
        var message = 'Este Sancionado tiene procesos asociados.';

        // Mostrar la alerta de SweetAlert
        window.onload = function() {
            swal({
                title: 'Advertencia',
                text: message + ' Número de proceso: ' + numero,
                icon: 'warning',
                //buttons: true,
                //dangerMode: true,
            });
        }
    </script>";

    // Detener la eliminación en este punto
    return false;
} else {
		// Si no hay procesos asociados, permitir la eliminación incluyendo si existen registros en tablas Propiedades, Direcicones y Solidarios
		DB::Delete("Direcciones", "SancionadoId=".$IdSancionado."");
		DB::Delete("Solidarios", "SancionadoId=".$IdSancionado."");
		DB::Delete("Propiedades", "SancionadoId=".$IdSancionado."");
    
    return true;
}
;
} // function BeforeDelete

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		



}
?>