<?php

/**
 * 	Dear developer!
 *	Never modify events.php file, it is autogenerated.
 *  Modify PHP/EventTemplates/events.txt instead.
 *
 */

 class eventclass_test_de_deterioro__resumen_  extends eventsBase
{
	function __construct()
	{
	// fill list of events
		$this->events["BeforeProcessList"]=true;


	}

//	handlers

				// List page: Before process
function BeforeProcessList($pageObject)
{

				 $U_user = $_SESSION["UserNameF"];
		 $test_deterioro_fecha = 	$_SESSION['test_deterioro_mes'];// Fecha en formato YYYY-MM-DD

		 // Separar la fecha en año, mes y día
		//list($ano, $mes, $dia) = explode('-', $cons_mes);


		// Crear un objeto DateTime a partir del año y mes
		$dateDesde = new DateTime($test_deterioro_fecha);
		$dateHasta = new DateTime($test_deterioro_fecha);
		$date = new DateTime($test_deterioro_fecha);
	
		// Generar el primer día del mes
		$primer_dia = $dateDesde->modify('first day of this month')->format('d-m-Y');

		// Generar el último día del mes
		$ultimo_dia = $dateHasta->modify('last day of this month')->format('d-m-Y');

		// Definir un array con los nombres de las carteras

				// Separar el año, mes y el último día
		$ano = $date->format('Y');
		$mes = $date->format('m');
		$dia = $date->format('d'); // Último día del mes

		// Definir un array con los nombres de los meses
		$meses = [
			 '01' => 'enero',
			 '02' => 'febrero',
			 '03' => 'marzo',
			 '04' => 'abril',
			 '05' => 'mayo',
			 '06' => 'junio',
			 '07' => 'julio',
			 '08' => 'agosto',
			 '09' => 'septiembre',
			 '10' => 'octubre',
			 '11' => 'noviembre',
			 '12' => 'diciembre'
		];
		
		// Convertir el mes numérico al nombre correspondiente
		$nombre_mes = $meses[$mes];

		$cartera = [
			 '1' => 'CARTERA CORRIENTE',
			 '2' => 'CARTERA PRESCRITA CSJ',
			 '3' => 'CARTERA PRESCRITA MINJUSTICIA',
			 '4' => 'CARTERA MINJUSTICIA',
			 '5' => 'CARTERA EJEMPLARIZANTE'
		];

		// Convertir el id cartera numérico al nombre correspondiente
		$cartera_nombre = $cartera[$ejecutivo_cartera ];


		  global $xt;


  		$sql = "DECLARE @Fecha    DATE = '$test_deterioro_fecha';
								DECLARE @UserName VARCHAR(30) = '$U_user';

										  DECLARE @UserId INT=
										  (
												SELECT UserId
												FROM UserProfile
												WHERE UserName = @Username
										  );
										  SET @Fecha = EOMONTH(@Fecha);
										  SELECT NEWID() AS Id, 
													Seccionales.Seccional, 
													SUM(Deterioro.Rel_Saldo) AS Saldo, 
													SUM(Deterioro.Rel_VPN) AS VPN, 
													SUM(CASE
															  WHEN Procesos.ConceptoId < 4
															  THEN Deterioro.Rel_Deterioro
															  ELSE 0
														 END) AS Deterioro, 
													SUM(CASE
															  WHEN Procesos.ConceptoId >= 4
															  THEN Deterioro.Rel_Deterioro
															  ELSE 0
														 END) AS DeterioroOtros, 
													SUM(Deterioro.Rel_Deterioro) / SUM(Deterioro.Rel_Saldo) AS Porcentaje
										  FROM Procesos
												 INNER JOIN Deterioro ON Procesos.ProcesoId = Deterioro.ProcesoId
												 INNER JOIN Seccionales ON Procesos.SeccionalId = Seccionales.SeccionalId
												 INNER JOIN CarteraTipos ON Procesos.CarteraTipoId = CarteraTipos.CarteraTipoId
										  WHERE(Deterioro.Fecha = @Fecha)
												 AND (CarteraTipos.Prescrita = 0)
										  GROUP BY Seccionales.Seccional;";
		    // Define tu consulta SQL

    // Ejecuta la consulta
    $resultado = CustomQuery($sql);

		// Genera el inicio de la tabla HTML
		$htmlTable = '<div id="miContenedor" style="display: flex; margin-bottom: 20px;">';

		// Agrega el texto
		//$htmlTable .= '<div style="flex: 1; text-align: center; font-weight: bold; font-size: 16px;">';
		$htmlTable .= '<div style="flex: 1;">';
				// Agrega la imagen
		//$htmlTable .= '<img src="images/LogoCSJ.png" alt="Logo" style="width: 215px; height: 70px;">';
		$htmlTable .= '<img src="images/LogoCSJ.png" alt="Logo" style="width: 215px; height: 70px; float: left; margin-right: 20px;">';
		$htmlTable .= '<p style="display: block; text-align: center; font-weight: bold; font-size: 16px; margin-left: 235px;">';
		$htmlTable .= 'Dirección Ejecutiva de Administración Judicial<br>';
		$htmlTable .= 'División de Cobro Coactivo<br>';
	  $htmlTable .= 'Deterioro de Cartera de Cobro Coactivo por Seccionales<br>';
		$htmlTable .= 'Con Corte a '.$nombre_mes.' de '.$ano.'<br>';
		$htmlTable .= '</p>';

		// Agrega el título de la tabla
		$htmlTable .= '<table border="1" cellpadding="9" cellspacing="0" style="width: 100%; border-collapse: collapse; font-family: Arial, sans-serif;">';

		// Estilo de encabezado
		$htmlTable .= '<thead style="background-color: #d9d9d9; font-weight: bold; text-align: center;">';

		$htmlTable .= '<tr>';
		$htmlTable .= '<td rowspan="2" style="text-align: center; font-weight: bold;  background-color: #79a7e3;  width: 20%;">Seccional</td>';
		$htmlTable .= '<td rowspan="2" style="text-align: center; font-weight: bold;  background-color: #79a7e3;">Saldo de Cartera</td>';
		$htmlTable .= '<td rowspan="2" style="text-align: center; font-weight: bold;  background-color: #79a7e3;">VPN de Flujos Esperados</td>';
		$htmlTable .= '<td rowspan="2" style="text-align: center; font-weight: bold;  background-color: #79a7e3;">Deterioro Multas</td>';
		$htmlTable .= '<td rowspan="2" style="text-align: center; font-weight: bold;  background-color: #79a7e3;">Deterioro Otros</td>';
		$htmlTable .= '<td rowspan="2" style="text-align: center; font-weight: bold;  background-color: #79a7e3;">Porcentaje</td>';
		$htmlTable .= '</tr>';

		$htmlTable .= '</thead>';

		// Genera el cuerpo de la tabla
		$htmlTable .= '<tbody>';

		$datos = [];

		// Procesa los resultados y agrega las filas
		while ($data = db_fetch_array($resultado)) {

			 $htmlTable .= '<tr>';
			 $htmlTable .= '<td style="text-align: center;">' . htmlspecialchars($data['Seccional']) . '</td>';
			 $htmlTable .= '<td style="text-align: right;">' . htmlspecialchars(number_format($data['Saldo'], 0, ',', '.')) . '</td>';
			 $htmlTable .= '<td style="text-align: right;">' . htmlspecialchars(number_format($data['VPN'], 0, ',', '.')) . '</td>';
			 $htmlTable .= '<td style="text-align: right;">' . htmlspecialchars(number_format($data['Deterioro'], 0, ',', '.')) . '</td>';
			 $htmlTable .= '<td style="text-align: right;">' . htmlspecialchars(number_format($data['DeterioroOtros'])) . '</td>';
			 $htmlTable .= '<td style="text-align: right;">' . htmlspecialchars(number_format(round($data['Porcentaje']* 100, 2), 2, ',', '.')) . '%</td>';
			 $htmlTable .= '</tr>';
				
				$datos[] = $data['Porcentaje'];
				

				$TotalSaldo += $data['Saldo'];
				$TotalVPN += $data['VPN'];
				$TotalDeterioro += $data['Deterioro'];
				$TotalDeterioroOtros += $data['DeterioroOtros'];
				$TotalPorcentaje += $data['Porcentaje'];
				
				
				
		}
		
		sort($datos);

		// Calcular la mediana
		$n = count($datos);
		$mediana = 0;

		if ($n % 2 == 0) {
			 // Si el número de elementos es par
			 $mediana = ($datos[$n / 2 - 1] + $datos[$n / 2]) / 2;
		} else {
			 // Si el número de elementos es impar
			 $mediana = $datos[floor($n / 2)];
		}


		$htmlTable .= '<tr>';
		$htmlTable .= '<th style="text-align: center; width: 20%; bold;">Totales</th>';
		$htmlTable .= '<th style="text-align: right; width: 10%; bold;">' . htmlspecialchars(number_format($TotalSaldo, 0, ',', '.')) . '</th>';
		$htmlTable .= '<th style="text-align: right; width: 10%; bold;">' . htmlspecialchars(number_format($TotalVPN, 0, ',', '.')) . '</th>';
		$htmlTable .= '<th style="text-align: right; width: 10%; bold;">' . htmlspecialchars(number_format($TotalDeterioro, 0, ',', '.')) . '</th>';
		$htmlTable .= '<th style="text-align: right; width: 10%; bold;">' . htmlspecialchars(number_format($TotalDeterioroOtros, 0, ',', '.')) . '</th>';
		$htmlTable .= '<th style="text-align: right; width: 10%; bold;">' . htmlspecialchars(number_format(round($mediana * 100, 2), 2, ',', '.')) . '%</th>';
		$htmlTable .= '</tr>';

		$htmlTable .= '</tbody>';
		$htmlTable .= '</table>';

		$htmlTable .='<div class="formato-firma">';
				$htmlTable .='<div class="" style="height: 50px;"></div>';
				$htmlTable .='<span class="">____________________</span></p>';
				$htmlTable .='<p><strong>Revisado</strong></p>';
				$htmlTable .= '</div>';
				$htmlTable .= '</div>'; // Cierra el div flex
		$htmlTable .='</div>';

		// Asigna el HTML generado a una variable para usarla en la plantilla
		$xt->assign("mi_tabla_html", $htmlTable);

		return true; // Devuelve true para continuar con el proceso
;
} // function BeforeProcessList

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		



}
?>